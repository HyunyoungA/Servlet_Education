/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-16 02:43:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".test{width: 300px; min-height: 50px; border: 1px solid red;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>jQuery를 이용한 Ajax구현</h1>\r\n");
      out.write("	<h3>1. 버튼 선택 시 전송 값 서버에 출력</h3>\r\n");
      out.write("	이름 : <input type=\"text\" id=\"myName\">\r\n");
      out.write("	<button id=\"nameBtn\">이름 전송</button>\r\n");
      out.write("	<script>\r\n");
      out.write("// 		$('#nameBtn').click(function(){}\r\n");
      out.write("		$('#nameBtn').on('click', function(){\r\n");
      out.write("			var name = $('#myName').val();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery1.do',\r\n");
      out.write("				data: {sendName:name},//name(변수)사용 위에 var name을 사용하는거다\r\n");
      out.write("				success: function(){\r\n");
      out.write("					alert('통신성공');\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					alert('통신 실패');\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}, \r\n");
      out.write("				complete: function(){\r\n");
      out.write("					alert('난 무조건이야');\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>2. 버튼 선택시 서버에서 보낸 값 사용자가 수신</h3>\r\n");
      out.write("	<button id=\"getServerTextBtn\">서버에 보낸 값 확인</button>\r\n");
      out.write("	<p class=\"test\" id=\"p1\"></p>\r\n");
      out.write("	<script>\r\n");
      out.write("		$('#getServerTextBtn').click(function(){//보낼 데이터없을때\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery2.do',\r\n");
      out.write("				success: function(data){//함수data: pw.print(\"서버에서 전송한 값입니다.\");의 \"서버에서 전송한 값입니다.\"를 담아오는 것이다\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					$('#p1').text(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>3. 서버로 기본형 전송 값이 있고, 결과로 문자열을 받아 처리</h3>\r\n");
      out.write("	<h4>두 개의 값을 더한 결과를 받아옴</h4>\r\n");
      out.write("	첫 번째 숫자 : <input type =\"text\" id=\"firstNum\"><br>\r\n");
      out.write("	두 번째 숫자 : <input type =\"text\" id=\"secondNum\"><br>\r\n");
      out.write("	<button id =\"plusBtn\">더하기</button>\r\n");
      out.write("	<p class=\"test\" id=\"p2\"></p>\r\n");
      out.write("	<script>\r\n");
      out.write("		//더하기 버튼을 누르면 첫 번째 숫자의 값과 두번째 숫자의 값을\r\n");
      out.write("		//ajax를 통해 jQuery3.do 쪽으로 전송하는 코드 작성\r\n");
      out.write("		$('#plusBtn').click(function(){\r\n");
      out.write("			var num1 = $('#firstNum').val();\r\n");
      out.write("			var num2 = $('#secondNum').val();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery3.do',\r\n");
      out.write("				data: {firstNum:num1, secondNum:num2},\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(typeof data);//String\r\n");
      out.write("					console.log(Number(data) + 3);//숫자로 형변환해서 계산식을하고싶을때 이렇게 사용한다.\r\n");
      out.write("					$('#p2').text(data);\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	<h3>4. Object형태의 데이터를 서버에 전송, 서버에서 데이터 처리 후 서버 console로 출력</h3>\r\n");
      out.write("	학생1 : <input type=\"text\" id=\"student1\"><br>\r\n");
      out.write("	학생2 : <input type=\"text\" id=\"student2\"><br>\r\n");
      out.write("	학생3 : <input type=\"text\" id=\"student3\"><br>\r\n");
      out.write("	<button id =\"studentTest\">결과확인</button>\r\n");
      out.write("	<script>\r\n");
      out.write("		//결과 확인 버튼을 누르면 학생1, 학생2, 학생3의 이름이 jQuery4.do 쪽으로 전송\r\n");
      out.write("		//전송된 학생들의 이름은 서버의 console창에 아래 예시와 같이 출력되고\r\n");
      out.write("		//화면에서 \"전송 성공\"이라는 알림창이 뜸\r\n");
      out.write("		//console 출력 예시 : 수업을 들을 학생은 OOO, XXX, ㅁㅁㅁ입니다.\r\n");
      out.write("		\r\n");
      out.write("		$('#studentTest').click(function(){\r\n");
      out.write("			var s1 = $('#student1').val();\r\n");
      out.write("			var s2 = $('#student2').val();\r\n");
      out.write("			var s3 = $('#student3').val();\r\n");
      out.write("			\r\n");
      out.write("			var ss = {student1:s1, student2:s2, student3:s3};\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery4.do',\r\n");
      out.write("// 				data: {student1:s1, student2:s2, student3:s3},//키값:value\r\n");
      out.write("				data: ss,\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					alert('전송 성공');\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>5. 서버로 기본형 데이터 전송, 서버에서 객체 반환</h3>\r\n");
      out.write("	<h4>유저 번호 보내서 해당 유저 정보 가져오기</h4>\r\n");
      out.write("	유저 번호 : <input type=\"text\" id=\"userNo\"><br>\r\n");
      out.write("	<button id=\"getUserInfoBtn\">정보 가져오기</button>\r\n");
      out.write("	<p class=\"test\" id=\"p3\"></p>\r\n");
      out.write("	<textarea class=\"test\" id=\"textarea3\" rows=\"5\" cols=\"40\"></textarea>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		$('#getUserInfoBtn').click(function(){\r\n");
      out.write("			var userNo = $('#userNo').val();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery5.do',\r\n");
      out.write("				data: {userNo:userNo},\r\n");
      out.write("				dataType: 'json',//제이슨 데이터타입을 작성해주는것을 권장한다.\r\n");
      out.write("				success: function(data){//서버에서 보낸 데이터 매개변수data로 받음, data써놓고 안사용해도되니까 일단 습관적으로 써놓는다\r\n");
      out.write("					console.log(data);//data(object) 안에 key가 있다. key=userNation, userNo, userName \r\n");
      out.write("// 					console.log(typeof data);//string 활용 어려움\r\n");
      out.write("					var resultStr = \"\";\r\n");
      out.write("					if(data != null){\r\n");
      out.write("						//1. 강건강, 대한민국\r\n");
      out.write("						resultStr = data.userNo + \", \" + data.userName + \", \" + data.userNation;\r\n");
      out.write("					}else{\r\n");
      out.write("						resultStr = \"해당 회원이 없습니다.\";\r\n");
      out.write("					}\r\n");
      out.write("					$('#p3').text(resultStr);\r\n");
      out.write("					$('#textarea3').val(resultStr);//input, textarea는 val()사용해야한다.\r\n");
      out.write("// 					$('#textarea3').text(resultStr);\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>6. 서버로 기본 값 전송, 서버에서 리스트 객체 반환</h3>\r\n");
      out.write("	<h4>유저 번호 전송 --> 해당 유저가 있는 경우 유저 정보, 없는 경우 전체 가져오기</h4>\r\n");
      out.write("	유저 번호 : <input type=\"text\" id=\"userNo2\">\r\n");
      out.write("	<button id=\"getUserInfoBtn2\">정보 가져오기</button>\r\n");
      out.write("	<p class=\"test\" id = \"p4\"></p>\r\n");
      out.write("	<textarea rows=\"5\" cols=\"40\" class=\"test\" id=\"textarea4\"></textarea>\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		$('#getUserInfoBtn2').click(function(){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery6.do',\r\n");
      out.write("				data: {userNo:$('#userNo2').val()},\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);//객체배열 , 없는 유저번호를 찍으면 객체배열\r\n");
      out.write("					\r\n");
      out.write("					//JSONObject 중첩\r\n");
      out.write("// 					var result = \"\";\r\n");
      out.write("// 					for(var i in data){//data:객체 i:객체의 키 (벼열이라면 인덱스)\r\n");
      out.write("// 						if(typeof data[i] != 'object'){//타입이 오브젝트인지 아닌지 나눠준다.//키값이 쭉 나오기때문에\r\n");
      out.write("// 							result = data.userNo + \", \" + data.userName + \", \" + data.userNation;\r\n");
      out.write("// 						} else{//객체의 오브젝트\r\n");
      out.write("// // 							result += data[i].userNo + ', ' + data[i].userName + ', ' + data[i].userNation + \"<br>\";//p태그 버전\r\n");
      out.write("// 							result += data[i].userNo + ', ' + data[i].userName + ', ' + data[i].userNation + \"\\n\";//textarea 버전\r\n");
      out.write("							\r\n");
      out.write("// 						}//이어서 들어가니까 꼭 +=를 사용한다\r\n");
      out.write("// 					}\r\n");
      out.write("// // 					$('#p4').html(result);//br을 텍스트로 인지해서 .html로 해준다.\r\n");
      out.write("// 					$('#textarea4').val(result);//textarea 버전\r\n");
      out.write("					\r\n");
      out.write("					////JSONArray 사용 (ArrayList와 비슷)\r\n");
      out.write("					var result = \"\";\r\n");
      out.write("					for(var i in data){//i:인덱스\r\n");
      out.write("// 						result += data[i].userNo + \", \" + data[i].userName + \", \" + data[i].userNation + \"<br>\";//p\r\n");
      out.write("						result += data[i].userNo + \", \" + data[i].userName + \", \" + data[i].userNation + \"\\n\";//textarea\r\n");
      out.write("					}					\r\n");
      out.write("					\r\n");
      out.write("					$('#p4').html(result);\r\n");
      out.write("					$('#textarea4').val(result);\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>7. 서버로 데이터 여러 개 전송, 서버에서 리스트 객체 반환</h3>\r\n");
      out.write("	<h4>유저 번호 전송 --> 현재 있는 유저 정보만 모아서 출력</h4>\r\n");
      out.write("	유저 정보(번호,번호,번호) : <input type=\"text\" id=\"userNo3\">\r\n");
      out.write("	<button id=\"getUserInfoBtn3\">정보 가져오기</button>\r\n");
      out.write("	<p class=\"test\" id=\"p5\"></p>\r\n");
      out.write("	<script>\r\n");
      out.write("		$('#getUserInfoBtn3').click(function(){\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:'jQuery7.do',\r\n");
      out.write("				data:{userNo:$('#userNo3').val()},\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					\r\n");
      out.write("					var result = \"\";\r\n");
      out.write("					for(i in data){\r\n");
      out.write("						result += data[i].userNo + \", \" + data[i].userName + \", \" + data[i].userNation + \"<br>\";\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					$('#p5').html(result);\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("   \r\n");
      out.write("	<br>\r\n");
      out.write("   \r\n");
      out.write("	<h3>8. 서버로 데이터 여러개 전송, 서버에서 맵 형태의 객체 반환</h3>\r\n");
      out.write("	<h4>이하 내용은 7번 문제와 동일</h4>\r\n");
      out.write("	유저 정보(이름,이름,이름) : <input type=\"text\" id=\"userName\">\r\n");
      out.write("	<button id=\"getUserInfoBtn4\">정보 가져오기</button><br><br>\r\n");
      out.write("	<textarea id=\"textarea6\" class=\"test\" cols=\"40\" rows=\"5\"></textarea>\r\n");
      out.write("	\r\n");
      out.write("	<h3>9. 서버 유지 정보로 표 구성하기</h3>\r\n");
      out.write("	<button id=\"userInfoBtn\">유저 정보 불러오기</button>\r\n");
      out.write("	<table id=\"userInfoTable\" border=\"1\" cellpadding='0' cellspacing='0'>\r\n");
      out.write("		<thead>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>번호</th>\r\n");
      out.write("				<th>이름</th>\r\n");
      out.write("				<th>국적</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody></tbody>\r\n");
      out.write("	</table>\r\n");
      out.write("	<script>\r\n");
      out.write("		$('#userInfoBtn').click(function(){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:'jQuery9.do',\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					$tableBody = $('#userInfoTable tbody');//구조적으로 분리tbody로\r\n");
      out.write("					//변수에 $집어넣는 이유: 제이쿼리는 객체형태로 반환됨. 자바는 inner로 가져오지만 제이쿼리는 텍스트 로 다르게 가져와서 반환값이 다르다 둘이 다른 언어이기 때문에\r\n");
      out.write("					//자바,제이쿼리 두개 차이가 있다.표시를 해줘야한다.이름만 보고 제이쿼리인지 자바인지 구분해줘야하기때문에\r\n");
      out.write("					$tableBody.html('');//리셋해서 위에 덮어씌어지는거다, 넣지않으면 클릭을 할때마다 추가되서 밑으로 이어붙혀진다,\r\n");
      out.write("					$.each(data, function(index, value){//인덱스\r\n");
      out.write("						var $tr = $('<tr>');\r\n");
      out.write("						var $noTd = $('<td>').text(value.userNo);\r\n");
      out.write("						var $nameTd = $('<td>').text(value.userName);\r\n");
      out.write("						var $nationTd = $('<td>').text(value.userNation);\r\n");
      out.write("						\r\n");
      out.write("						$tr.append($noTd);//append ~의 끝에 붙이다, 추가하다 \r\n");
      out.write("						$tr.append($nameTd);\r\n");
      out.write("						$tr.append($nationTd);\r\n");
      out.write("						\r\n");
      out.write("						$tableBody.append($tr);\r\n");
      out.write("					});\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<h3>10. 서버에서 List객체 반환 받아 select태그를 이용해 보여줌</h3>\r\n");
      out.write("	유저 이름 : <input type=\"text\" id=\"selectUserName\"><br>\r\n");
      out.write("	<button id=\"selectListBtn\">유저 정보 불러오기</button><br>\r\n");
      out.write("	<select id=\"selectListTest\"></select>\r\n");
      out.write("	<script>\r\n");
      out.write("		$('#selectListBtn').click(function(){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'jQuery10.do',\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					$select = $('#selectListTest');\r\n");
      out.write("					$select.find('option').remove();//옵션 추가에 계속 이어서 생성되는걸 막는다\r\n");
      out.write("					\r\n");
      out.write("					for(var i in data){\r\n");
      out.write("						var name = data[i].userName;\r\n");
      out.write("						var selected = (name == $('#selectUserName').val()) ? 'selected' : '';\r\n");
      out.write("						\r\n");
      out.write("						$select.append('<option value=\"' + data[i].userNo + '\"' + selected + '>' + name + \"</option\");\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
